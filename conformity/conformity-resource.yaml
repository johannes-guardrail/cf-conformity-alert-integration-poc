Resources:
  CustomFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
            import json
            import cfnresponse
            def handler(event, context):
              try:
                print("conformity handler")
                print(event['RequestType'])
                responseData = {}
                if event["RequestType"] == "Delete":
                  responseData['Message'] = "Delete was successful"
                elif event["RequestType"] in ["Create", "Update"]:
                  print(event['ResourceProperties']['Input'])
                  responseData['Input'] = event['RequestType']
                cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, "CustomResourcePhysicalID")
              except Exception as e:
                cfnresponse.send(event, context, cfnresponse.FAILED, {}, "CustomResourcePhysicalID")
      Handler: index.handler
      Role: !GetAtt CustomFunctionRole.Arn
      Runtime: python3.6
  CustomFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  Custom:
    Type: Custom::ConformitySetup
    Properties:
      ServiceToken: !GetAtt CustomFunction.Arn
      Input: 100